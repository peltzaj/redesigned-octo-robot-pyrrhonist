# encoding: utf-8
# -*- mode: ruby -*-
# vi: set ft=ruby :

CHEF_SERVER_SCRIPT = <<EOF.freeze
sudo yum update -y
# apt-get -y install curl

# ensure the time is up to date
echo "Synchronizing time..."
# apt-get install ntp -y
# service ntp stop
# ntpdate -s time.nist.gov
# service ntp start

sudo yum -y install ntp wget
sudo systemctl stop ntpd
sudo ntpdate -s time.nist.gov
sudo systemctl start ntpd
sudo systemctl enable ntpd

# download the Chef server package
echo "Downloading the Chef server package..."
# if [ ! -f /downloads/chef-server-core_12.11.1_amd64.deb ]; then
#  wget -nv -P /downloads https://packages.chef.io/files/stable/chef-server/12.11.1/ubuntu/14.04/chef-server-core_12.11.1-1_amd64.deb
# fi
if [ ! -f /downloads/chef-server-core-12.14.0-1.el7.x86_64.rpm ]; then
  wget -nv -P /downloads https://packages.chef.io/files/stable/chef-server/12.14.0/el/7/chef-server-core-12.14.0-1.el7.x86_64.rpm
fi

# install the package
echo "Installing Chef server..."
sudo yum install /downloads/chef-server-core-12.14.0-1.el7.x86_64.rpm -y

# reconfigure and restart services
echo "Reconfiguring Chef server..."
sudo chef-server-ctl reconfigure
echo "Restarting Chef server..."
sudo chef-server-ctl restart

# wait for services to be fully available
echo "Waiting for services..."
until (curl -D - http://localhost:8000/_status) | grep "200 OK"; do sleep 15s; done
while (curl http://localhost:8000/_status) | grep "fail"; do sleep 15s; done

# create admin user
echo "Creating a user and organization..."
sudo chef-server-ctl user-create admin Bob Admin admin@4thcoffee.com insecurepassword --filename admin.pem
sudo chef-server-ctl org-create 4thcoffee "Fourth Coffee, Inc." --association_user admin --filename 4thcoffee-validator.pem

# copy admin RSA private key to share
echo "Copying admin key to /vagrant/secrets..."
mkdir -p /vagrant/secrets
cp -f /home/vagrant/admin.pem /vagrant/secrets

echo "Your Chef server is ready!"
EOF

NODE_SCRIPT = <<EOF.freeze
echo "Preparing node..."

# ensure the time is up to date
yum -y install ntp wget
systemctl start ntpd
systemctl enable ntpd

echo "10.92.1.30 chef-server.test" | tee -a /etc/hosts
EOF

def set_hostname(server)
  server.vm.provision 'shell', inline: "hostname #{server.vm.hostname}"
end

Vagrant.configure(2) do |config|
  config.vm.define 'chef-server' do |cs|
    cs.vm.box = 'bento/centos-7.3'
    #cs.vm.box_version = '2.2.9'
    cs.vm.hostname = 'chef-server.test'
    cs.vm.network 'private_network', ip: '10.92.1.30'
    cs.vm.network "forwarded_port", guest: 8000, host: 8000
    cs.vm.provision 'shell', inline: CHEF_SERVER_SCRIPT.dup
    set_hostname(cs)
    cs.vm.provider 'virtualbox' do |v|
      v.memory = 2048
      v.cpus = 2
    end
  end

  # create load balancer
  config.vm.define "lb" do |lb_config|
      lb_config.vm.box = "bento/centos-7.3"
      lb_config.vm.hostname = "lb.test"
      lb_config.vm.network :private_network, ip: "10.92.1.40"
      lb_config.vm.network "forwarded_port", guest: 80, host: 8080
      lb_config.vm.provision :shell, inline: NODE_SCRIPT.dup
      lb_config.vm.provider "virtualbox" do |vb|
        vb.memory = 384
      end
  end

  (1..4).each do |i|
    config.vm.define "node#{i}" do |n|
      n.vm.box = 'bento/centos-7.3'
      #n.vm.box_version = '2.2.9'
      n.vm.hostname = "node#{i}.test"
      n.vm.network 'private_network', ip: "10.92.1.3#{i}"
      n.vm.network "forwarded_port", guest: 80, host: "808#{i}"
      n.vm.provision :shell, inline: NODE_SCRIPT.dup
      set_hostname(n)
      n.vm.provider "virtualbox" do |vb|
        vb.memory = 384
      end
    end
  end
end
